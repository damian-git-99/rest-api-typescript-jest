components:
  schemas:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    UserRequest:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string

swagger: "2.0"
info:
  title: "API Documentation"
  version: "1.0"
tags:
  - name: users
    description: User-related operations

paths:
  /api/1.0/users:
    get:
      summary: Get the list of all users
      tags:
        - users
      responses:
        200:
          description: List of users retrieved successfully
  /api/1.0/users/{id}:
      get:
        summary: Get a user by ID
        tags:
          - users
        parameters:
          - name: id
            in: path
            description: ID of the user to retrieve
            required: true
            type: integer
        security:
          - jwtAuth: []
        responses:
          200:
            description: User retrieved successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserResponse'
          403:
            description: Forbidden - JWT token missing or invalid
          404:
            description: User not found           
      put:
        summary: Update a user by ID
        tags:
          - users
        parameters:
          - name: id
            in: path
            description: ID of the user to update
            required: true
            type: integer
        security:
          - jwtAuth: []
        requestBody:
          description: Updated user data
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRequest'
        responses:
          200:
            description: User updated successfully
            schema:
              $ref: '../../swagger-docs/schemas.yaml#/components/schemas/User'
          400:
            description: Bad request - Invalid data provided
          403:
            description: Forbidden - JWT token missing or invalid
          404:
            description: User not found
      
      delete:
        summary: Delete a user by ID
        tags:
          - users
        parameters:
          - name: id
            in: path
            description: ID of the user to delete
            required: true
            type: integer
        security:
            - jwtAuth: []
        responses:
          204:
            description: User deleted successfully
          403:
              description: Forbidden - JWT token missing or invalid
          404:
            description: User not found